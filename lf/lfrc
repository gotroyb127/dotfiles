#!/bin/sh
# ^^^^^^^ trick vim to syntax highlihght

set nohidden
set color256
set dircounts
set incsearch
set info size
set icons
set number
set drawbox
set relativenumber
set period 1
set findlen 2
set anchorfind
set scrolloff 5
set previewer ~/.local/etc/lf/scope.sh
set shell ksh
set ifs "\n"

#cmd on-cd $cd "$(dirname "$f")"
cmd open          $Open.sh "$f"
cmd OpenSel       $Open.sh "$fx"
cmd EchoSelection !clear -x 2> /dev/null || clear; echo "$fx" | sort -n;
cmd SelRecurs     &find "$f" | sort | LF_Select.sh
cmd REsel         &LF_Pattern.sh "$@" | LF_Select.sh
cmd Resource      :source ~/.config/lf/lfrc
cmd UpdateLMark   :cmd-insert ":mark-save\n'"; cmd-delete-home

cmd Yankname &{{
	[ -z "$f" ] && t="$PWD" || t="$f"
	basename "$t" | tr -d '\n' | xsel
	echo -n "$t" | xsel -b
}}

cmd SetPrompt &{{
	ID="\033[38;5;123m$id"
	CO="\033[38;5;252m:"
	LV="\033[38;5;84m$LF_LEVEL"
	W="\033[38;5;105m"
	F="\033[38;5;15m"
	N="\033[0m"

#	unset ID id CO
	lf -remote "send $id set promptfmt \
	\"($ID$CO$LV$N) $W%w$F%f\""
}}

cmd Recol &{{
	w=$(tput cols)
	N="$IFS"
	if [ $w -le 75 ]; then
		lf -remote "send $id set nopreview${N}send $id set ratios 1"
	elif [ $w -le 220 ]; then
		lf -remote "send $id set ratios 11:16${N}send $id set preview"
	else
		lf -remote "send $id set ratios 7:16${N}send $id set preview"
	fi
}}

cmd Trash &{{
	{ N="$IFS"
	LF_Move.sh "mv${N}-v${N}--" "$TRASH" NO_DUPS
	lf -remote "send load${N}"
	} | LF_Log.sh
}}

cmd delete !{{
	N="$IFS"
	[ -z "$TMPTRASH" ] && echo "error: TMPTRASH enviroment variable is not set."
	clear -x 2> /dev/null || clear
	printf "---\tFiles to be deleted:\t---\n\n$(echo "$fx" | sed "s!^$HOME!~!")\n\nDelete? [Y/n]: "
	read ans
	[[ $ans = !(y|Y) ]] && echo 'Aborted.' && exit 0;
	[ ! -e "$TMPTRASH" ] && mkdir -p "$TMPTRASH" && chmod 777 "$TMPTRASH"
	LF_Move.sh "mv${N}-v${N}--" "$TMPTRASH"
	printf "\n--- Targets moved to $TMPTRASH. ---"
}}

cmd paste &{{
	{ N="$IFS"
	load=$(lf -remote 'load')
	mode=$(echo "$load" | sed -n '1p')
	list=$(echo "$load" | sed '1d')
	if [[ $mode = copy ]]; then
		OP="cp${N}-Rv${N}--"
		DUPS=
	elif [[ $mode = move ]]; then
		OP="mv${N}-v${N}--"
		DUPS=NO
	fi
	export fx="$list"
	LF_Move.sh "$OP" $PWD $DUPS | sed "s!'$HOME!'~!g"
	lf -remote "send load${N}send clear"
	} | LF_Log.sh
}}

map a %du -hd0 "$f" 2> /dev/null | awk '{print $1"  "}' | tr -d '\n'; ls -lhd "$f"
map A !{{
	clear -x 2> /dev/null || clear;
	ls_size() {
		awk '/^[^dltÏƒ]/ { printf $5"\t"; for(i=9; i<NF; ++i){printf $i"\t"} print $NF}'
	}
	[ -z "$fs" ] && {
		du -hd1 | sort -rn
		ls -Shla | ls_size
		exit
	}
	for t in $(echo "$fs" | sed "s\`$PWD/\`\`"); do
		[ -d $t ] && {
			du -hd0 $t
			continue
		}
		ls -Shl $t | ls_size
	done
}}

map R :{{
	Resource
	&sleep .5 && lf -remote "send $id echo 'Configuration file (~/.config/lf/lfrc) loaded.'"
}}

map sn :set sortby natural
map sN :set sortby name

map Jj %LF_Jump.sh -type f
map Jd %LF_Jump.sh -type d
map Ja %LF_Jump.sh

map i $nvim -MR "$f"
map E :push $nvim<space>""<left>
map D :push $mkdir<space>""<left>
map x :push $chmod<space>+x<space>"$f"
map X !clear -x 2> /dev/null || clear; "$f"
map C !vidir -v $fx

map <c-y> :up
map <c-e> :down
map <c-l> :Recol; SetPrompt
map <esc> :cmd-escape
map <c-r> :redraw; reload
map c     :clear; unselect

map <delete>  :Trash
map <c-space> :toggle; up
map t :toggle
map Y :Yankname; echo Filename Yanked.
map V :SelRecurs
map L :OpenSel

map r
map re :rename; cmd-word-back; cmd-left
map rA :rename
map rS :rename; cmd-delete-home
map rI :rename; cmd-home

map bb :set drawbox!
map bv :set preview!
map bn :set relativenumber!
map bN :set number!
map bi :set icons!
map <bs> :set hidden!

map Sp &xsel -o | LF_Select.sh
map Sc &xsel -bo | LF_Select.sh
map Ss :EchoSelection
map Sg :push :glob-select<space>
map SG :push :glob-unselect<space>
map Sr :push :REsel<space>

map gr :UpdateLMark; cd /
map ge :UpdateLMark; cd /etc
map gT :UpdateLMark; cd /tmp
map gm :UpdateLMark; cd /mnt
map gh :UpdateLMark; cd
map gl :UpdateLMark; cd ~/.local
map gs :UpdateLMark; cd ~/.local/scripts
map gt :UpdateLMark; cd ~/.local/trash
map gd :UpdateLMark; cd ~/Documents
map gD :UpdateLMark; cd ~/Downloads
map gc :UpdateLMark; &lf -remote "send $id cd '${XDG_CONFIG_HOME:-\"$HOME/.config\"}'"

#&sleep 1; lf -remote "send $id :Recol; SetPrompt"
Recol; SetPrompt
