#!/bin/sh

dontLockF="${TMPDIR-/tmp}/xsidle.sh.dontlock"
newBlank=
nextAction=S
[ -n "$2" ] &&
	newBlank=no

defTime=$(xset q | awk '/timeout/ {print $2" "$4}')
[ "$(xset q | awk '/blanking/ {print $3}')" = no ] &&
	defBlank=no

SetnewTime() {
	if expr \( \( "$1" + 0 \) : '[0-9]\+' \) '<=' 5 > /dev/null 2>&1
	then
		newTime=$1
	else
		printf '%s: %s\n' "${0##*/}" "Not a small enough integer." >&2
		newTime=${newTime:-30}
	fi
}
Set() {
	[ "X$nextAction" != XS ] &&
		return 1
	xset s $newTime
	xset s ${newBlank}blank
	printf "|-SS-\tTimeout changed: $newTime\t${newBlank}blank\n"
	touch "$dontLockF"
	nextAction=R
}
Reset() {
	[ "X$nextAction" != XR ] &&
		return 1
	xset s $defTime
	xset s ${defBlank}blank
	printf "|-RR-\tTimeout reset: $defTime\t${defBlank}blank\n"
	rm -f "$dontLockF"
	nextAction=S
}
Pause() {
	read ans
	expr "$ans" : 'q' > /dev/null &&
		exit 0
	case $ans in
	([0-9]*)
		SetnewTime "$ans"
		nextAction=S
	;;
	(no)
		newBlank=no
		nextAction=S
	;;
	(blank)
		newBlank=
		nextAction=S
	;;
	esac
}

trap 'exit 0' TERM
trap 'echo; exit 0' INT
trap 'Reset' exit

SetnewTime "${1:-10}"

while true
do
	Set && Pause
	Reset && Pause
done
